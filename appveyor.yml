version: configuring.{build}
configuration:
- Debug
- Release
platform:
- Win32
- x64
clone_folder: c:\SLBuild\cabl
init:
- cmd: choco install doxygen.install
build_script:
- cmd: >-
    echo Running cmake...

    echo Building %CONFIGURATION% - %PLATFORM%

    cd c:\SLBuild\cabl

    mkdir build-%PLATFORM%

    pushd build-%PLATFORM%

    if %PLATFORM% == x64 (cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DCABL_TEST_JUNIT=ON -DCABL_TEST_ALL=ON -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=ON ..) else (cmake -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DCABL_TEST_JUNIT=ON -DCABL_TEST_ALL=ON -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=ON ..)

    cd ..

    cmake --build build-%PLATFORM% --config %CONFIGURATION%

    mkdir build-%PLATFORM%\%CONFIGURATION%\include

    xcopy inc build-%PLATFORM%\%CONFIGURATION%\include /e /y /I

    mkdir artifacts-%CONFIGURATION%

    cd build-%PLATFORM%\%CONFIGURATION%\

    7z a -tzip cabl-win.zip -r *

    move /y *.zip ..\..\artifacts-%CONFIGURATION%

    cd ..\..\

after_build:
- cmd: >-
    cd c:\SLBuild\cabl\artifacts-%CONFIGURATION%

    if %PLATFORM% == x64 (echo Preparing to deploy cabl-win-64_%APPVEYOR_BUILD_VERSION%.zip) else (echo Preparing to deploy cabl-win-32_%APPVEYOR_BUILD_VERSION%.zip)

    if %PLATFORM% == x64 (ren cabl-win.zip cabl-win-64_%APPVEYOR_BUILD_VERSION%.zip) else (ren cabl-win.zip cabl-win-32_%APPVEYOR_BUILD_VERSION%.zip)

    cd ..

before_test:
- cmd: >-
    cd c:\SLBuild\cabl\

    cmake --build build-%PLATFORM% --config %CONFIGURATION% --target check

artifacts:
- path: artifacts-Release/cabl-win-32_*.zip
  name: cabl (32bit)
- path: artifacts-Release/cabl-win-64_*.zip
  name: cabl (64bit)

deploy:
- provider: Environment
  name: cabl-win-64
  on:
    branch: release
    CONFIGURATION: Release
    PLATFORM: x64

- provider: Environment
  name: cabl-win-32
  on:
    branch: release
    CONFIGURATION: Release
    PLATFORM: Win32

on_finish:
- ps: >-
    $testReportPath = "c:\SLBuild\cabl\build-$($env:PLATFORM)\test\$($env:CONFIGURATION)\test-report.junit.xml"

    if([System.IO.File]::Exists($testReportPath)){
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testReportPath))
    }
